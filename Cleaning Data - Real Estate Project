-- Cleaning Data in SQL

-- Standardize Data Format

ALTER TABLE NashvilleHousing
ALTER COLUMN SaleDate Date

-- Populate Property Address Data

Select *
From NashvilleHousing
Where PropertyAddress is null
order by ParcelID

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
From PortfolioProject..NashvilleHousing a
Join PortfolioProject..NashvilleHousing	b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress	is NULL

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
From PortfolioProject..NashvilleHousing a
Join PortfolioProject..NashvilleHousing	b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress	is NULL

-- Breaking out Address into Individual Columns (Address, City, State)

Select PropertyAddress
From PortfolioProject..NashvilleHousing

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) AS Address, 
SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1,LEN(PropertyAddress)) AS City
From PortfolioProject..NashvilleHousing

ALTER TABLE NashvilleHousing
Add Address nvarchar(255)

Update NashvilleHousing
SET Address = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

ALTER TABLE NashvilleHousing
Add City nvarchar(255)

Update NashvilleHousing
SET City = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1,LEN(PropertyAddress))

Select OwnerAddress,
PARSENAME(REPLACE(OwnerAddress,',','.'),3),
PARSENAME(REPLACE(OwnerAddress,',','.'),2),
PARSENAME(REPLACE(OwnerAddress,',','.'),1)
From NashvilleHousing
Where OwnerAddress is not null

ALTER TABLE NashvilleHousing
ADD OwnerAddressSplit nvarchar(255), OwnerCitySplit nvarchar(255), OwnerStateSplit nvarchar(255)

Update NashvilleHousing
SET OwnerAddressSplit = PARSENAME(REPLACE(OwnerAddress,',','.'),3),
	OwnerCitySplit = PARSENAME(REPLACE(OwnerAddress,',','.'),2),
	OwnerStateSplit = PARSENAME(REPLACE(OwnerAddress,',','.'),1)

-- Change Y and N to Yes and No in 'Sold as Vacant' field

Select Distinct(SoldAsVacant), COUNT(SoldasVacant)
From NashvilleHousing
Group by SoldasVacant
Order by 2

Select SoldAsVacant, 
   Case when SoldAsVacant = 'Y' then 'Yes'
		when SoldAsVacant = 'N'	then 'No'
		else SoldAsVacant
		END,
COUNT(Soldasvacant)
From NashvilleHousing
Group by SoldAsVacant

Update NashvilleHousing
SET SoldAsVacant = Case when SoldAsVacant = 'Y' then 'Yes'
		when SoldAsVacant = 'N'	then 'No'
		else SoldAsVacant
		END

-- Remove Duplicates 

With RowNumCTE AS (
Select *,
	ROW_NUMBER() OVER( 
	PARTITION BY ParcelID, PropertyAddress, SalePrice, SaleDate, LegalReference
	Order by
		UniqueID
		) row_num
From NashvilleHousing
)
Select *
From RowNumCTE
Where row_num > 1
Order by [UniqueID ]

-- Delete Unused Columns

ALTER TABLE PortfolioProject..NashvilleHousing
DROP COLUMN PropertyAddress, OwnerName, OwnerAddress, TaxDistrict
